// Mocks generated by Mockito 5.4.3 from annotations
// in throwtrash/test/unit/usecase/alarm_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:throwtrash/models/alarm.dart' as _i4;
import 'package:throwtrash/models/user.dart' as _i6;
import 'package:throwtrash/usecase/repository/alarm_api_interface.dart' as _i5;
import 'package:throwtrash/usecase/repository/alarm_repository_interface.dart'
    as _i2;
import 'package:throwtrash/usecase/repository/config_repository_interface.dart'
    as _i7;
import 'package:throwtrash/usecase/repository/fcm_interface.dart' as _i8;
import 'package:throwtrash/usecase/repository/user_repository_interface.dart'
    as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AlarmRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlarmRepositoryInterface extends _i1.Mock
    implements _i2.AlarmRepositoryInterface {
  @override
  _i3.Future<bool> saveAlarm(_i4.Alarm? alarm) => (super.noSuchMethod(
        Invocation.method(
          #saveAlarm,
          [alarm],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i4.Alarm?> readAlarm() => (super.noSuchMethod(
        Invocation.method(
          #readAlarm,
          [],
        ),
        returnValue: _i3.Future<_i4.Alarm?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.Alarm?>.value(),
      ) as _i3.Future<_i4.Alarm?>);
}

/// A class which mocks [AlarmApiInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlarmApiInterface extends _i1.Mock implements _i5.AlarmApiInterface {
  @override
  _i3.Future<bool> setAlarm(
    _i4.Alarm? alarm,
    String? deviceToken,
    _i6.User? user,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAlarm,
          [
            alarm,
            deviceToken,
            user,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> cancelAlarm(String? deviceToken) => (super.noSuchMethod(
        Invocation.method(
          #cancelAlarm,
          [deviceToken],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> changeAlarm(
    _i4.Alarm? alarm,
    String? deviceToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeAlarm,
          [
            alarm,
            deviceToken,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [ConfigRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigRepositoryInterface extends _i1.Mock
    implements _i7.ConfigRepositoryInterface {
  @override
  _i3.Future<bool> saveDarkMode(bool? isDarkMode) => (super.noSuchMethod(
        Invocation.method(
          #saveDarkMode,
          [isDarkMode],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool?> readDarkMode() => (super.noSuchMethod(
        Invocation.method(
          #readDarkMode,
          [],
        ),
        returnValue: _i3.Future<bool?>.value(),
        returnValueForMissingStub: _i3.Future<bool?>.value(),
      ) as _i3.Future<bool?>);

  @override
  _i3.Future<String?> getDeviceToken() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceToken,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
        returnValueForMissingStub: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<bool> saveDeviceToken(String? deviceToken) => (super.noSuchMethod(
        Invocation.method(
          #saveDeviceToken,
          [deviceToken],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [FcmInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockFcmInterface extends _i1.Mock implements _i8.FcmInterface {
  @override
  _i3.Future<String> refreshDeviceToken() => (super.noSuchMethod(
        Invocation.method(
          #refreshDeviceToken,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #refreshDeviceToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #refreshDeviceToken,
            [],
          ),
        )),
      ) as _i3.Future<String>);
}

/// A class which mocks [UserRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepositoryInterface extends _i1.Mock
    implements _i10.UserRepositoryInterface {
  @override
  _i3.Future<_i6.User?> readUser() => (super.noSuchMethod(
        Invocation.method(
          #readUser,
          [],
        ),
        returnValue: _i3.Future<_i6.User?>.value(),
        returnValueForMissingStub: _i3.Future<_i6.User?>.value(),
      ) as _i3.Future<_i6.User?>);

  @override
  _i3.Future<bool> writeUser(_i6.User? user) => (super.noSuchMethod(
        Invocation.method(
          #writeUser,
          [user],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
