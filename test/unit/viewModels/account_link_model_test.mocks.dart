// Mocks generated by Mockito 5.3.2 from annotations
// in throwtrash/test/unit/viewModels/account_link_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:throwtrash/models/account_link_info.dart' as _i2;
import 'package:throwtrash/usecase/account_link_service_interface.dart' as _i3;
import 'package:throwtrash/viewModels/account_link_model.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAccountLinkInfo_0 extends _i1.SmartFake
    implements _i2.AccountLinkInfo {
  _FakeAccountLinkInfo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AccountLinkServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountLinkServiceInterface extends _i1.Mock
    implements _i3.AccountLinkServiceInterface {
  MockAccountLinkServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AccountLinkInfo> startLink(
          _i5.AccountLinkType? accountLinkType) =>
      (super.noSuchMethod(
        Invocation.method(
          #startLink,
          [accountLinkType],
        ),
        returnValue:
            _i4.Future<_i2.AccountLinkInfo>.value(_FakeAccountLinkInfo_0(
          this,
          Invocation.method(
            #startLink,
            [accountLinkType],
          ),
        )),
      ) as _i4.Future<_i2.AccountLinkInfo>);
  @override
  _i4.Future<_i2.AccountLinkInfo?> getAccountLinkInfoWithCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccountLinkInfoWithCode,
          [code],
        ),
        returnValue: _i4.Future<_i2.AccountLinkInfo?>.value(),
      ) as _i4.Future<_i2.AccountLinkInfo?>);
}
